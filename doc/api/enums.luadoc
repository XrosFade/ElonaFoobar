--- Enumerations for various data types. All enum variants take the
--  name of the variant as a string for its value. This means that
--  anywhere an enum value is required, you can pass a string with its
--  name instead of using the <code>Enums</code> table.
--  @usage local Enums = Elona.require("Enums")
module "Enums"

--- A source of damage to be used with <code>LuaCharacter.damage_hp</code>.
--  @enum DamageSource
--  @tfield Enums.DamageSource Trap
--  @tfield Enums.DamageSource Overcasting
--  @tfield Enums.DamageSource Starvation
--  @tfield Enums.DamageSource Poisoning
--  @tfield Enums.DamageSource Curse
--  @tfield Enums.DamageSource BackpackWeight
--  @tfield Enums.DamageSource FallFromStairs
--  @tfield Enums.DamageSource Audience
--  @tfield Enums.DamageSource Burn
--  @tfield Enums.DamageSource Adventuring
--  @tfield Enums.DamageSource UnseenHand
--  @tfield Enums.DamageSource FoodPoisoning
--  @tfield Enums.DamageSource BloodLoss
--  @tfield Enums.DamageSource EtherDisease
--  @tfield Enums.DamageSource Acid
--  @tfield Enums.DamageSource Shatter
--  @tfield Enums.DamageSource AtomicBomb
--  @tfield Enums.DamageSource IronMaiden
--  @tfield Enums.DamageSource Guillotine
--  @tfield Enums.DamageSource Hanging
--  @tfield Enums.DamageSource Mochi
DamageSource = {}

--- A set of colors.
--  @enum Color
--  @tfield Enums.Color None
--  @tfield Enums.Color White
--  @tfield Enums.Color Green
--  @tfield Enums.Color Red
--  @tfield Enums.Color Blue
--  @tfield Enums.Color Orange
--  @tfield Enums.Color Yellow
--  @tfield Enums.Color Grey
--  @tfield Enums.Color Purple
--  @tfield Enums.Color Cyan
--  @tfield Enums.Color LightRed
--  @tfield Enums.Color Gold
--  @tfield Enums.Color White2
--  @tfield Enums.Color LightBrown
--  @tfield Enums.Color DarkGreen
--  @tfield Enums.Color LightGrey
--  @tfield Enums.Color PaleRed
--  @tfield Enums.Color LightBlue
--  @tfield Enums.Color LightPurple
--  @tfield Enums.Color LightGreen
--  @tfield Enums.Color YellowGreen
--  @tfield Enums.Color RandomFurniture
--  @tfield Enums.Color RandomSeeded
--  @tfield Enums.Color RandomAny
Color = {}

--- The curse state of an item.
--  @usage local item = Item.create(10, 10, "core.putitoro", 3)
--  item.curse_state = "Blessed"
--  @enum CurseState
--  @tfield Enums.CurseState Doomed
--  @tfield Enums.CurseState Cursed
--  @tfield Enums.CurseState None
--  @tfield Enums.CurseState Blessed
CurseState = {}

--- The identify state of an item.
--  @usage local item = Item.create(10, 10, "core.putitoro", 3)
--  item.identify_state = "Completely"
--  @enum IdentifyState
--  @tfield Enums.IdentifyState Unidentified
--  @tfield Enums.IdentifyState Partly
--  @tfield Enums.IdentifyState Almost
--  @tfield Enums.IdentifyState Completely
IdentifyState = {}

--- A status effect applicable to a character.
--  @see LuaCharacter.apply_ailment
--  @enum StatusAilment
--  @tfield Enums.StatusAilment Blinded
--  @tfield Enums.StatusAilment Confused
--  @tfield Enums.StatusAilment Paralyzed
--  @tfield Enums.StatusAilment Poisoned
--  @tfield Enums.StatusAilment Sleep
--  @tfield Enums.StatusAilment Fear
--  @tfield Enums.StatusAilment Dimmed
--  @tfield Enums.StatusAilment Bleeding
--  @tfield Enums.StatusAilment Drunk
--  @tfield Enums.StatusAilment Insane
--  @tfield Enums.StatusAilment Sick
StatusAilment = {}

--- A type of elemental damage.
--  @enum Element
--  @tfield Enums.Element Fire
--  @tfield Enums.Element Cold
--  @tfield Enums.Element Lightning
--  @tfield Enums.Element Darkness
--  @tfield Enums.Element Mind
--  @tfield Enums.Element Poison
--  @tfield Enums.Element Nether
--  @tfield Enums.Element Sound
--  @tfield Enums.Element Nerve
--  @tfield Enums.Element Chaos
--  @tfield Enums.Element Magic
--  @tfield Enums.Element Cut
--  @tfield Enums.Element Ether
--  @tfield Enums.Element Acid
--  @tfield Enums.Element Vorpal
Element = {}

--- A kind of tile to be used with <code>Map.generate_tile</code>.
--  @see Map.generate_tile
--  @enum TileKind
--  @tfield Enums.TileKind Normal
--  @tfield Enums.TileKind Wall
--  @tfield Enums.TileKind Tunnel
--  @tfield Enums.TileKind Room
--  @tfield Enums.TileKind Fog
TileKind = {}

--- The quality of randomly generated equipment.
--  @enum Quality
--  @tfield Enums.Quality None
--  @tfield Enums.Quality Bad
--  @tfield Enums.Quality Good
--  @tfield Enums.Quality Great
--  @tfield Enums.Quality Miracle
--  @tfield Enums.Quality Godly
--  @tfield Enums.Quality Special
Quality = {}

--- The type of a buff. Food buffs are lost when vomiting. Hex buffs can be
--  removed with Holy Light/Vanquish Hex, and can be resisted.
--  @enum Buff
--  @tfield Enums.Buff Buff
--  @tfield Enums.Buff Hex
--  @tfield Enums.Buff Food
Buff = {}

--- The type of a map.
--  @enum MapType
--  @tfield Enums.MapType WorldMap
--  @tfield Enums.MapType Guild
--  @tfield Enums.MapType Town
--  @tfield Enums.MapType Field
--  @tfield Enums.MapType PlayerOwned
--  @tfield Enums.MapType Shelter
--  @tfield Enums.MapType Temporary
--  @tfield Enums.MapType Dungeon
--  @tfield Enums.MapType DungeonTower
--  @tfield Enums.MapType DungeonForest
--  @tfield Enums.MapType DungeonCastle
MapType = {}

--- Determines how the player should be spawned in a map when entering it for the
--  first time.
--  @enum MapEntranceType
--  @tfield Enums.MapEntranceType StairUp
--  @tfield Enums.MapEntranceType StairDown
--  @tfield Enums.MapEntranceType Custom
--  @tfield Enums.MapEntranceType Center
--  @tfield Enums.MapEntranceType Random
--  @tfield Enums.MapEntranceType WorldMapPos
--  @tfield Enums.MapEntranceType Specified
--  @tfield Enums.MapEntranceType South
MapEntranceType = {}

--- Indicates which map tile atlas to use for a map.
--  @enum MapTileset
--  @tfield Enums.MapTileset Normal
--  @tfield Enums.MapTileset WorldMap
MapTileset = {}

--- Possible genders of a character.
--  @enum Gender
--  @tfield Enums.Gender Random
--  @tfield Enums.Gender Male
--  @tfield Enums.Gender Female
Gender = {}

--- Relationship of a character to the player.
--  @enum Relationship
--  @tfield Enums.Relationship Aggressive
--  @tfield Enums.Relationship Nonaggressive
--  @tfield Enums.Relationship Unconcerned
--  @tfield Enums.Relationship Neutral
--  @tfield Enums.Relationship Friend
Relationship = {}

--- A flag that can be set on a character. The first 32 flags (up to
--  <code>IsQuickTempered</code>) are "intrinsic" and will be reset
--  when the character is refreshed.
--  @see LuaCharacter.set_flag
--  @enum CharaFlag
--  @tfield Enums.CharaFlag IsFloating
--  @tfield Enums.CharaFlag IsInvisible
--  @tfield Enums.CharaFlag CanSeeInvisible
--  @tfield Enums.CharaFlag IsImmuneToConfusion
--  @tfield Enums.CharaFlag IsImmuneToBlindness
--  @tfield Enums.CharaFlag IsImmuneToFear
--  @tfield Enums.CharaFlag IsImmuneToSleep
--  @tfield Enums.CharaFlag IsImmuneToParalyzation
--  @tfield Enums.CharaFlag IsImmuneToPoison
--  @tfield Enums.CharaFlag CanDigestRottenFood
--  @tfield Enums.CharaFlag IsProtectedFromThieves
--  @tfield Enums.CharaFlag IsIncognito
--  @tfield Enums.CharaFlag DropsGold
--  @tfield Enums.CharaFlag Explodes
--  @tfield Enums.CharaFlag IsDeathMaster
--  @tfield Enums.CharaFlag CanCastRapidMagic
--  @tfield Enums.CharaFlag HasLayHand
--  @tfield Enums.CharaFlag IsSuitableForMount
--  @tfield Enums.CharaFlag Splits
--  @tfield Enums.CharaFlag HasCursedEquipments
--  @tfield Enums.CharaFlag IsUnsuitableForMount
--  @tfield Enums.CharaFlag IsImmuneToElementalDamage
--  @tfield Enums.CharaFlag Splits2
--  @tfield Enums.CharaFlag IsMetal
--  @tfield Enums.CharaFlag CuresBleedingQuickly
--  @tfield Enums.CharaFlag HasPowerBash
--  @tfield Enums.CharaFlag IsImmuneToMine
--  @tfield Enums.CharaFlag IsQuickTempered
--  @tfield Enums.CharaFlag IsLivestock
--  @tfield Enums.CharaFlag IsMarried
--  @tfield Enums.CharaFlag HasMadeGene
--  @tfield Enums.CharaFlag IsEscorted
--  @tfield Enums.CharaFlag IsTemporary
--  @tfield Enums.CharaFlag IsSilent
--  @tfield Enums.CharaFlag HasBeenUsedStethoscope
--  @tfield Enums.CharaFlag HasOwnSprite
--  @tfield Enums.CharaFlag IsLeashed
--  @tfield Enums.CharaFlag IsContracting
--  @tfield Enums.CharaFlag IsQuestTarget
--  @tfield Enums.CharaFlag IsEscortedInSubQuest
--  @tfield Enums.CharaFlag WillExplodeSoon
--  @tfield Enums.CharaFlag IsSentencedDaeth
--  @tfield Enums.CharaFlag IsLayHandAvailable
--  @tfield Enums.CharaFlag IsRidden
--  @tfield Enums.CharaFlag IsLordOfDungeon
--  @tfield Enums.CharaFlag HasOwnName
--  @tfield Enums.CharaFlag IsPregnant
--  @tfield Enums.CharaFlag IsNotAttackedByEnemy
--  @tfield Enums.CharaFlag IsContractingWithReaper
--  @tfield Enums.CharaFlag NeedsRefreshingStatus
--  @tfield Enums.CharaFlag VisitedJustNow
--  @tfield Enums.CharaFlag BreaksIntoDebris
--  @tfield Enums.CharaFlag IsBestFriend
--  @tfield Enums.CharaFlag IsHungOnSandBag
--  @tfield Enums.CharaFlag HasAnorexia
--  @tfield Enums.CharaFlag WasPassedItemByYouJustNow
--  @tfield Enums.CharaFlag CuresMpFrequently
--  @tfield Enums.CharaFlag HasCustomTalk
--  @tfield Enums.CharaFlag HasLearnedWords
--  @tfield Enums.CharaFlag OnlyChristmas
CharaFlag = {}

--- The types of traits available.
--  @enum TraitType
--  @tfield Enums.TraitType Feat
--  @tfield Enums.TraitType Mutation
--  @tfield Enums.TraitType Nature
--  @tfield Enums.TraitType EtherDisease
TraitType = {}

--- Location to search for characters using Chara.find.
--  @see Chara.find
--  @enum CharaFindLocation
--  @tfield Enums.CharaFindLocation Allies
--  @tfield Enums.CharaFindLocation Others
CharaFindLocation = {}

--- Location to search for items using Item.find.
--  @see Item.find
--  @enum ItemFindLocation
--  @tfield Enums.ItemFindLocation PlayerInventory
--  @tfield Enums.ItemFindLocation Ground
--  @tfield Enums.ItemFindLocation PlayerInventoryAndGround
ItemFindLocation = {}

--- Operation to use with Input.choose_ally.
--  @see Input.choose_ally
--  @enum ControlAllyOperation
--  @tfield Enums.ControlAllyOperation CallBack
--  @tfield Enums.ControlAllyOperation Sell
--  @tfield Enums.ControlAllyOperation PetArena
--  @tfield Enums.ControlAllyOperation Staying
--  @tfield Enums.ControlAllyOperation Investigate
--  @tfield Enums.ControlAllyOperation GeneEngineer
ControlAllyOperation = {}

--- Title type to use with World.random_title.
--  @see World.random_title
--  @enum RandomTitleType
--  @tfield Enums.RandomTitleType Character
--  @tfield Enums.RandomTitleType Weapon
--  @tfield Enums.RandomTitleType Party
--  @tfield Enums.RandomTitleType LivingWeapon
RandomTitleType = {}
